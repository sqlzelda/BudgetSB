# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/BudgetSB.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  versionNumber: '$(MajorVersion).$(MinorVersion).$(Revision)-$(build.SourceBranchName)-$(GitVersion.ShortSha)'
  my-counter: '$(MinorVersion)'
  Revision: $[counter(variables['my-counter'],0)]

name: $(versionNumber)

steps:
- task: NuGetToolInstaller@1

- task: GitVersion@5
  inputs:
    runtime: 'full'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:OctoPackPackageVersion=$(versionNumber)  /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)" /p:RunOctoPack=true /p:OctoPackPublishPackageToFileShare="$(build.artifactStagingDirectory)"'
    configuration: '$(buildConfiguration)'

- task: OctopusPush@4
  inputs:
    OctoConnectedServiceName: 'Octopus Cloud'
    Space: 'Spaces-1'
    Package: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    Replace: 'false'

- task: OctopusCreateRelease@4
  inputs:
    OctoConnectedServiceName: 'Octopus Cloud'
    Space: 'Spaces-1'
    ProjectName: 'Projects-1'
    ReleaseNumber: '$(versionNumber)'
    Channel: 'Channels-1'
    DeployToEnvironment: 'Environments-1'
    AdditionalArguments: '--packageversion $(versionNumber)'